{"version":3,"sources":["app/single_var_table.cljs"],"mappings":"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","names":["cljs.spec.alpha/def-impl","cljs.core/keyword?","cljs.core/int?","cljs.core/float?","cljs.spec.alpha/map-spec-impl","G__59147","cljs.core/map?","cljs.core/contains?","cljs.spec.alpha.every_impl","G__59148","cljs.core/coll?","G__59149","G__59151","cljs.spec.alpha.tuple_impl","G__59154","i__9377__auto__","v__9378__auto__","cljs.core.nth","app.single-var-table/OneToManyCorrelation","app.stats/CorrelationResults","app.single-var-table/aggregate-names","app.single-var-table/filter-insignificant","rows","p1__59155#","cljs.core.filter","app.stats/p-value-cutoff","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl","cljs.spec.alpha/cat-impl","p1__59156#","app.single-var-table/calc-counted-score","correlations","cljs.core.reduce","cljs.core/+","cljs.core.map","app.single-var-table/get-significant-correlations","data","one-var-type","one-var","many-var-type","one-var-raw-data","one-var-significant-correlations","G__59159","cljs.core/group-by","app.stats/round","cljs.core/count","iter__4652__auto__","s__59161","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","b__59163","cljs.core/chunk-buffer","i__59162","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__59160","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","correlation","app.single-var-table/get-csv-values","csv-data","column-name","cljs.core.into","s__59165","b__59167","i__59166","iter__59164","row","value","cljs.core/not","js/isNaN","app.single-var-table/make-all-correlations","unique-one-vars","cljs.core/set","p1__59170#","s__59174","b__59176","i__59175","iter__59173","app.single-var-table/table-keys","p1__59178#","app.single-var-table/get-one-var-timeseries-data","cljs.core/select-keys","s__59197","b__59199","i__59198","iter__59196","p1__59188#","s__59201","b__59203","i__59202","s__59207","b__59209","i__59208","vec__59211","iter__59206","vec__59216","iter__59200","s__59220","b__59222","i__59221","vec__59227","iter__59219","vec__59230","p1__59189#","app.single-var-table/make-hiccup","app.biomarker-data/data","app.biomarker-data/make-acm-plot","k","cljs.core/keys","cljs.core.sort_by","mvar","cljs.core/name","app.ui/hover-to-render","v","cljs.core/chunk-first"],"sourcesContent":["(ns app.single-var-table\n  (:require\n    [app.stats :as stats]\n    [app.biomarker-data :as biodata]\n    [app.csv-data-processing :as proc]\n    [app.ui :as ui]\n    ; [spec-tools.data-spec :as ds]\n    [ghostwheel.core :as g :refer [>defn >defn- >fdef => | <- ?]]\n    [cljs.spec.alpha :as s]))\n\n; (def one-to-many-correlation\n;   (ds/spec ::one-to-many-correlation\n;     {:one-var keyword?\n;      :aggregates {:score int?\n;                   :average float?}\n;      :correlations [{:many-var keyword?\n;                      :regression-results :app.stats/regression-results}]}))\n; (s/def ::one-to-many-correlation one-to-many-correlation)\n; (s/def ::one-to-many-correlations\n;   (s/map-of keyword? ::one-to-many-correlation))\n\n(s/def ::one-var keyword?)\n(s/def ::many-var keyword?)\n\n(s/def ::score int?)\n(s/def ::average float?)\n(s/def ::aggregates (s/keys :req-un [::score ::average]))\n\n(s/def ::correlations\n  (s/coll-of (s/keys :req-un [::many-var :app.stats/regression-results])))\n\n(s/def ::one-to-many-correlation\n  (s/keys :req-un\n          [::one-var ::aggregates ::correlations]))\n(s/def ::one-to-many-correlations\n  (s/map-of keyword? ::one-to-many-correlation))\n\n(def OneToManyCorrelation\n  [:map [:one-var :keyword]\n        [:aggregates [:map [:score :int]\n                           [:average :number]\n                           [:acm-score :number]]]\n        [:correlations [:map [:many-var :keyword]\n                             [:regression-results stats/CorrelationResults]]]])\n\n; TODO generate these from the OneToManyCorrelation spec above\n(def aggregate-names #{:score :average :acm-score})\n\n\n(defn filter-insignificant\n  \"Filter row maps from the input that show statistically insignificant\n  correlations\"\n  [rows]\n  (filter #(< (:p-value (:regression-results %))\n              stats/p-value-cutoff)\n          rows))\n\n; TODO we may need to introduce a concept of \"up is good\" and \"down is bad\" so\n; that this score instead takes the difference between \"good\" and \"bad\"\n; correlations, not just positive and negative ones.\n(>defn calc-counted-score\n  \"Sums up all postive correlations and all negatives correlations, then takes\n  the difference.\"\n  [correlations]\n  [::pairwise-correlations\n   => int?]\n  (reduce + (map #(if (neg? (:correlation (:regression-results %))) -1 1)\n                 correlations)))\n\n\n(defn get-significant-correlations\n  {:malli/schema [:=> [:cat\n                       stats/PairwiseCorrelations\n                       :keyword\n                       :keyword\n                       :keyword\n                       [:vector :number]]\n                  OneToManyCorrelation]}\n  [data one-var-type one-var many-var-type one-var-raw-data]\n  ; [::pairwise-correlations keyword? keyword? keyword?\n  ;  | #(every? (fn [d] (contains? d one-var-type))  data)\n  ;  => ::one-to-many-correlation]\n  (let [one-var-significant-correlations\n        (one-var (group-by one-var-type (filter-insignificant data)))]\n    {:one-var one-var\n     :aggregates {:score (calc-counted-score one-var-significant-correlations)\n                  ; :acm-score 0\n                  :average (stats/round (/ (reduce + one-var-raw-data)\n                                         (count one-var-raw-data)))}\n     :correlations (for [correlation one-var-significant-correlations]\n                     {:many-var (many-var-type correlation)\n                      :regression-results (:regression-results correlation)})}))\n\n(defn get-csv-values\n  \"Filters NaNs while getting the data.\"\n  {:malli/schema [:=> [:cat\n                       [:vector [:map [:keyword :number]]]\n                       :keyword]\n                  [:vector :number]]}\n  [csv-data column-name]\n  (into [] (for [row csv-data\n                 :let [value (column-name row)]\n                 :when (not (js/isNaN value))]\n             value)))\n\n(defn make-all-correlations\n  {:malli/schema [:=> [:cat\n                       stats/PairwiseCorrelations\n                       proc/ProcessedRows\n                       :keyword\n                       :keyword]\n                  OneToManyCorrelation]}\n  [correlations csv-data one-var-type many-var-type]\n  ; [::pairwise-correlations keyword? keyword?\n  ;  => ::one-to-many-correlations]\n  (let [unique-one-vars (set (map #(one-var-type %) correlations))]\n    (into {} (for [one-var unique-one-vars]\n               [one-var (get-significant-correlations\n                          correlations one-var-type one-var many-var-type\n                          (get-csv-values csv-data one-var))]))))\n\n(def table-keys [:correlation :rounded-p-value :datapoints])\n\n(>defn get-one-var-timeseries-data\n  [data]\n  [::one-to-many-correlation => :app.biomarker-data/timeseries-data]\n  (map #(select-keys % [:timestamp (:one-var data)])\n       (-> data\n           :correlations\n           first\n           :regression-results\n           :raw-data)))\n\n(>defn make-hiccup\n  \"Creates a table like this:\n           Input\n        Aggregate 1\n        Aggregate 2\n  Biomarker | r | p | n\n  data      | 0 | 0 | 0\n  ...\n  \"\n  [data]\n  [::one-to-many-correlation => :app.specs/hiccup]\n  (let [one-var (:one-var data)]\n    [:div\n      [:table\n        [:tbody\n    ;  https://www.w3schools.com/html/html_table_headers.asp\n         [:tr [:th {:colSpan 4}\n               [:a {:id one-var} one-var]\n               \", Counted score of \" (:score (:aggregates data))\n               \", Average value \" (:average (:aggregates data))]]\n         [:tr [:td {:colSpan 4}\n               (if (contains? biodata/data one-var)\n                 [:div\n                   (biodata/make-acm-plot\n                     (get-one-var-timeseries-data data)\n                     (one-var biodata/data))\n                   [:p (:notes (one-var biodata/data))]\n                   [:p \"Source: \" (:source (one-var biodata/data))]]\n                 \"No data found for this metric.\")]]\n         [:tr [:th \"Correlate\"]\n          (for [k (-> data\n                      :correlations\n                      first\n                      :regression-results\n                      (#(select-keys % table-keys))\n                      keys)]\n            [:th {:key (str k \"-head\")} k])]\n         (for [correlations (sort-by #(:correlation (:regression-results %))\n                                     (:correlations data))]\n           (let [mvar (name (:many-var correlations))]\n             [:tr {:key (str mvar \"-row\")} \n              [:td [ui/hover-to-render\n                    [:a {:href (str \"#\" mvar)} mvar]\n                    (:scatterplot (:regression-results correlations))]]\n              (for [[k v] (select-keys (:regression-results correlations)\n                                       table-keys)]\n                [:td {:key (str mvar \"-\" k)} v])]))]]]))\n"]}